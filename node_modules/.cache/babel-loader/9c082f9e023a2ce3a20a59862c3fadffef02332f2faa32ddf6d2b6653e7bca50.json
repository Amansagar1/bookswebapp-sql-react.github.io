{"ast":null,"code":"import express from \"express\";\nimport mysql from \"mysql2/promise\";\nimport cors from \"cors\";\nconst app = express();\nconst PORT = 3001;\nconst db = await mysql.createConnection({\n  host: 'localhost',\n  user: 'root',\n  password: '0531',\n  database: 'sagar'\n});\napp.use(express.json());\napp.use(cors());\napp.get(\"/\", (req, res) => {\n  res.json(\"Hello, this is the Sagar backend.\");\n});\napp.get(\"/books\", async (req, res) => {\n  try {\n    const [rows] = await db.query(\"SELECT * FROM books\");\n    res.json(rows);\n  } catch (err) {\n    console.error(\"Error executing the query:\", err);\n    res.status(500).json({\n      error: \"Internal server error\"\n    });\n  }\n});\napp.post(\"/books\", async (req, res) => {\n  const sql = \"INSERT INTO books (`title`, `desc`, `price`, `cover`) VALUES (?, ?, ?, ?)\";\n  const values = [req.body.title, req.body.desc, req.body.price, req.body.cover];\n  try {\n    await db.query(sql, values);\n    res.json(\"Book has been created successfully.\");\n  } catch (err) {\n    console.error(\"Error executing the query:\", err);\n    res.status(500).json({\n      error: \"Internal server error\"\n    });\n  }\n});\napp.delete(\"/books/:id\", (req, res) => {\n  const bookId = req.params.id;\n  const q = \"DELETE FROM books WHERE id = ?\";\n  db.query(q, [bookId], (err, data) => {\n    if (err) return res.json(err);\n    return res.json(\"Book has been deleted successfully\");\n  });\n});\napp.put(\"/books/:id\", (req, res) => {\n  const bookId = req.params.id;\n  const q = \"UPDATE books SET `title` = ? , `desc` = ?, `price`=? , `cover`= ? WHERE id = ?\";\n  const values = [req.body.title, req.body.desc, req.body.price, req.body.cover];\n  db.query(q, [...values, bookId], (err, data) => {\n    if (err) return res.json(err);\n    return res.json(\"Book has been updated successfully\");\n  });\n});\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});","map":{"version":3,"names":["express","mysql","cors","app","PORT","db","createConnection","host","user","password","database","use","json","get","req","res","rows","query","err","console","error","status","post","sql","values","body","title","desc","price","cover","delete","bookId","params","id","q","data","put","listen","log"],"sources":["D:/react folder/project-with-mysql/client/src/Pages/Update.js"],"sourcesContent":["import express from \"express\";\r\nimport mysql from \"mysql2/promise\";\r\nimport cors from \"cors\";\r\n\r\nconst app = express();\r\nconst PORT = 3001;\r\n\r\nconst db = await mysql.createConnection({\r\n  host: 'localhost',\r\n  user: 'root',\r\n  password: '0531',\r\n  database: 'sagar'\r\n});\r\n\r\napp.use(express.json());\r\napp.use(cors());\r\n\r\napp.get(\"/\", (req, res) => {\r\n  res.json(\"Hello, this is the Sagar backend.\");\r\n});\r\n\r\napp.get(\"/books\", async (req, res) => {\r\n  try {\r\n    const [rows] = await db.query(\"SELECT * FROM books\");\r\n    res.json(rows);\r\n  } catch (err) {\r\n    console.error(\"Error executing the query:\", err);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n});\r\n\r\napp.post(\"/books\", async (req, res) => {\r\n  const sql = \"INSERT INTO books (`title`, `desc`, `price`, `cover`) VALUES (?, ?, ?, ?)\";\r\n  const values = [req.body.title, req.body.desc, req.body.price, req.body.cover];\r\n\r\n  try {\r\n    await db.query(sql, values);\r\n    res.json(\"Book has been created successfully.\");\r\n  } catch (err) {\r\n    console.error(\"Error executing the query:\", err);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n});\r\n\r\napp.delete(\"/books/:id\", (req, res) => { \r\n  const bookId = req.params.id;\r\n  const q = \"DELETE FROM books WHERE id = ?\";\r\n  db.query(q, [bookId], (err, data) => {\r\n    if (err) return res.json(err);\r\n    return res.json(\"Book has been deleted successfully\");\r\n  });\r\n});\r\n\r\napp.put(\"/books/:id\", (req, res) => { \r\n  const bookId = req.params.id;\r\n  const q = \"UPDATE books SET `title` = ? , `desc` = ?, `price`=? , `cover`= ? WHERE id = ?\";\r\n  const values = [\r\n    req.body.title, req.body.desc, req.body.price, req.body.cover,\r\n  ];\r\n\r\n  db.query(q, [...values, bookId], (err, data) => {\r\n    if (err) return res.json(err);\r\n    return res.json(\"Book has been updated successfully\");\r\n  });\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on port ${PORT}`);\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}